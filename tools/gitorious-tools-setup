#!/bin/bash

#CONF
set -e -x
cat <<EOF > /usr/sbin/policy-rc.d
#!/bin/sh
exit 101
EOF
chmod +x /usr/sbin/policy-rc.d

cat <<EOF > /usr/sbin/invoke-rc.d
#!/bin/sh
exit 0
EOF
chmod +x /usr/sbin/invoke-rc.d

cat <<EOF > /etc/apt/sources.list
deb http://ftp.free.fr/mirrors/ftp.ubuntu.com/ubuntu/ quantal main restricted
deb http://security.ubuntu.com/ubuntu quantal-security main restricted
deb http://ftp.free.fr/mirrors/ftp.ubuntu.com/ubuntu/ quantal-updates main restricted

deb http://ftp.free.fr/mirrors/ftp.ubuntu.com/ubuntu/ quantal universe multiverse
deb http://security.ubuntu.com/ubuntu quantal-security universe multiverse
deb http://ftp.free.fr/mirrors/ftp.ubuntu.com/ubuntu/ quantal-updates universe multiverse
EOF

cat <<EOF > /etc/mtab
rootfs / rootfs rw 0 0
EOF

cat <<EOF > /etc/apt/apt.conf.d/70debconf
// Pre-configure all packages with debconf before they are installed.
// If you don't like it, comment it out.
// DPkg::Pre-Install-Pkgs {"/usr/sbin/dpkg-preconfigure --apt || true";};
EOF

set +e +x

apt-get update
apt-get upgrade -y
apt-get install -y git-core apg build-essential libpcre3 libpcre3-dev postfix make zlib1g zlib1g-dev ssh libc6-dev libssl-dev libmysql++-dev libmysqlclient-dev libsqlite3-dev libreadline-dev libonig-dev libyaml-dev geoip-bin libgeoip-dev libgeoip1 imagemagick mysql-client mysql-server libmysqlclient-dev sphinxsearch memcached apache2 curl build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config vim

curl -L https://get.rvm.io | bash -s stable
source /etc/profile.d/rvm.sh
rvm install ree-1.8.7

useradd -G rvm -m -U -s /bin/bash git
chown -R git:rvm /usr/local/rvm
chmod -R 755 /usr/local/rvm

su - git bash -c 'git clone git://gitorious.org/gitorious/mainline.git gitorious'
su - git bash -c 'gem install --no-rdoc --no-ri bundler'
su - git bash -c 'cd gitorious && bundle install'
su - git bash -c 'mkdir .ssh; chmod 700 .ssh; touch .ssh/authorized_keys'
mkdir /var/git
mkdir /var/git/repositories
mkdir /var/git/tarballs
mkdir /var/git/tarball-work
chown -R git:git /var/git
su - git bash -c 'cd gitorious; cp config/database.sample.yml config/database.yml; cp config/gitorious.sample.yml config/gitorious.yml; cp config/broker.yml.example config/broker.yml'
su - git bash -c 'cd gitorious; K=$(apg -m64 -d); sed -i "s/cookie_secret: ssssht/cookie_secret: $K/" config/gitorious.yml'
su - git bash -c 'cd gitorious; F=$(hostname -f); sed -i "0,/gitorious_host:/s/gitorious_host:.*/gitorious_host: $F/" config/gitorious.yml'
su - git bash -c 'cd gitorious; sed -i "s/#is_gitorious_dot_org: true/is_gitorious_dot_org: false/" config/gitorious.yml'
su - git bash -c 'cd gitorious; sed -i "s/#public_mode: true/public_mode: true/" config/gitorious.yml'
su - git bash -c 'cd gitorious; sed -i "s/#enable_private_repositories: false/enable_private_repositories: true/" config/gitorious.yml'
su - git bash -c 'cd gitorious; sed -i "s/# only_site_admins_can_create_projects: false/only_site_admins_can_create_projects: true/" config/gitorious.yml'

initctl reload-configuration
initctl start mysql
su - git bash -c 'cd gitorious; grep database: config/database.yml | awk "{print \"CREATE DATABASE IF NOT EXISTS \" \$2 \";\"}"' | mysql -v -u root

su - git bash -c 'cd gitorious; sed -i "0,/module/s/^module/require \"thread\"\n\nmodule/" config/boot.rb'
su - git bash -c 'cd gitorious; rake db:setup RAILS_ENV=production'
su - git bash -c 'cd gitorious; RAILS_ENV=production ruby script/create_admin'

